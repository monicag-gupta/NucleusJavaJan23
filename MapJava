Map Operations:

Object put(Object key, Object value);
Object get(Object key);
Object remove(Object key);
boolean containsKey(Object key);
boolean containsValue(Object value);
int size( );
boolean isEmpty( );
void putAll(Map t);
void clear();

public Set keySet( ); 
 set of objects of type keys
public Collection values( ); 
List of values
public Set entrySet( ); 
set of objects of type Map.Entry
Each Map.Entry Object has two objects : Key and Value
getKey() , getValue()
returns a set of Map.Entry (key-value) pairs
You can create iterators for the key set, the value set, or the entry set (the set of entries, that is, key-value pairs)
The above views provide the only way to iterate over a Map



package collectionPkg;
import java.util.*;

public class MapEg {
    public static void main(String args[]) {
        Map<String, String> fruit = new HashMap<>();
        fruit.put("Apple", "red");
        fruit.put("Pear", "yellow");
        fruit.put("Plum", "purple");
        fruit.put("Cherry", "red");
        fruit.put("Cherry", "deepred");
        System.out.println("Map Set : " + fruit);
        System.out.println("Key Set: " + fruit.keySet());
        System.out.println("Value Collection: " + fruit.values());
        System.out.println("Each Entry Set: " + fruit.entrySet());
        System.out.println("Map.Entry set of values: ");
        Set<Map.Entry<String, String>> mapEntry=fruit.entrySet();
        for(Map.Entry<String, String> ele : mapEntry){
            System.out.println(ele.getKey() + " : has Value : " + ele.getValue());
        }
        System.out.println("\nThe Fruits are: ");
        for (String key : fruit.keySet()) {
            System.out.println(key + ": " + fruit.get(key));
        }

    }







