package threadPkg;

public class ThreadEg {
    public static void main(String[] args) {
        MyThread1 t1=new MyThread1("t1");
        MyThread1 t2=new MyThread1("t2");
        Thread t3=new Thread(new MyRunnable1("t3"));
        Thread t4=new Thread(new MyRunnable1("t4"));
        Thread t5=new Thread(()->{for(int i=0;i<10;i++) System.out.println("t5" + " : " + i);});
        t1.start();
        t2.start();
        t3.start();
        t4.start();


    }
}




package threadPkg;

public class MyRunnable1 implements Runnable{
    private String name;
    public MyRunnable1(){
        name="MyThread1";
    }
    public MyRunnable1(String name){
        this.name=name;
    }
    @Override
    public void run() {
        for(int i=0;i<10;i++){
            for(int j=0;j<10000;j++);
            System.out.println(name + " : " + i);
        }
    }
}




package threadPkg;

public class MyThread1 extends Thread{
    private String name;
    public MyThread1(){
        name="MyThread1";
    }
    public MyThread1(String name){
        this.name=name;
    }

    @Override
    public void run() {
        for(int i=0;i<10;i++){
            for(int j=0;j<10000;j++);
            System.out.println(name + " : " + i);
        }
    }
}




Thread(): Allocates a new Thread object
Thread(Runnable target): Allocates a new Thread object
Thread(Runnable target, String name): Allocates a new Thread object
Thread(String name): Allocates a new Thread object







package threadPkg;

public class Account {
    public String AccountName;
    public Account(){
        AccountName="";
        balance=1000;
    }
    public Account(String name){
        AccountName=name;
        balance=1000;
    }
    public Account(String name, int bal){
        AccountName=name;
        balance=bal;
    }
    
    int balance;
    // if 'synchronized' is removed, the outcome is unpredictable
    public synchronized void deposit(int deposit_amount) {
        System.out.println("\nDeposit amount" + deposit_amount + " for " + AccountName);
        balance += deposit_amount;		
    }
    public synchronized void withdraw(int deposit_amount) {
        System.out.println("\nWithdrawn amount" + deposit_amount + " for " + AccountName);
        balance -= deposit_amount;		
    }
    public synchronized void enquire() {
        System.out.println("\nBalance=" + balance+ " for " + AccountName);		
    }
}




