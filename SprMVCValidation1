C:\Users\monica\ProjectsJava\SprMVCValidPrj1\src>tree /F
Folder PATH listing
└───main
    ├───java
    │   └───com
    │       ├───controller
    │       │       EmployeeController.java
    │       ├───dao
    │       │       EmployeeDAO.java
    │       │       EmployeeDAOImpl.java
    │       ├───model
    │       │       Employee.java
    │       ├───service
    │       │       EmployeeManager.java
    │       │       EmployeeManagerImpl.java
    │       └───validator
    │               EmployeeValidator.java
    ├───resources
    │       messages.properties
    └───webapp
        │   index.jsp
        └───WEB-INF
            │   spring-servlet.xml
            │   web.xml
            └───views
                    addEmployee.jsp
                    addSuccess.jsp





Pom.xml

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.example</groupId>
  <artifactId>SprMVCValidPrj1</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>SprMVCValidPrj1 Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>5.2.23.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>4.0.1</version>
    </dependency>

  </dependencies>
  <properties>
    <java.version>11</java.version>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <build>
    <finalName>SprMVCValidPrj1</finalName>
  </build>
</project>





WEB-INF ->web.xml :

<web-app id="WebApp_ID" version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

<display-name>Spring Web MVC Hello World Application</display-name>

<servlet>
  <servlet-name>spring</servlet-name>
  <servlet-class>
    org.springframework.web.servlet.DispatcherServlet
  </servlet-class>
  <load-on-startup>1</load-on-startup>
</servlet>

<servlet-mapping>
  <servlet-name>spring</servlet-name>
  <url-pattern>/</url-pattern>
</servlet-mapping>

</web-app>






Webapp->index.jsp :

<html>
<body>
<h2>Hello World!</h2>
<a href="addNew">click here</a>
</body>
</html>





WEB-INF -> spring-servlet.xml :

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    <context:component-scan base-package="com" />
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages" />
    </bean>
    <bean id="employeeValidator" class="com.validator.EmployeeValidator" />
</beans>







WEB-INF ->views -> addSuccess.jsp

<html>
    <head>
        <title>Add Employee Success</title>
    </head>
    <body>
        Employee has been added successfully.
    </body>
</html>




WEB-INF ->views -> addEmployee.jsp

<%@ page contentType="text/html;charset=UTF-8"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>

<html>
<head>
    <title>Add Employee Form</title>
    <style>
    .error
    {
        color: #ff0000;
        font-weight: bold;
    }
    </style>
</head>

<body>
    <h2><spring:message code="lbl.page" text="Add New Employee" /></h2>
    <br/>
    <form:form method="post" modelAttribute="employee">
        <%-- <form:errors path="*" cssClass="error" /> --%>
        <table>
            <tr>
                <td><spring:message code="lbl.firstName" text="First Name" /></td>
                <td><form:input path="firstName" /></td>
                <td><form:errors path="firstName" cssClass="error" /></td>
            </tr>
            <tr>
                <td><spring:message code="lbl.lastName" text="Last Name" /></td>
                <td><form:input path="lastName" /></td>
                <td><form:errors path="lastName" cssClass="error" /></td>
            </tr>
            <tr>
                <td><spring:message code="lbl.email" text="Email Id" /></td>
                <td><form:input path="email" /></td>
                <td><form:errors path="email" cssClass="error" /></td>
            </tr>
            <tr>
                <td colspan="3"><input type="submit" value="Add Employee"/></td>
            </tr>
        </table>
    </form:form>
</body>
</html>







Resources -> messages.properties

lbl.page=Add New Employee
lbl.firstName=First Name
lbl.lastName=Last Name
lbl.email=Email Id

error.firstName=First Name can not be blank
error.lastName=Last Name can not be blank
error.email=Email Id can not be blank





com.controller. EmployeeController 

package com.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;

import com.model.Employee;
import com.service.EmployeeManager;
import com.validator.EmployeeValidator;

@Controller
@RequestMapping("addNew")
@SessionAttributes("employee")
public class EmployeeController
{
    @Autowired
    EmployeeManager manager;

    @Autowired
    EmployeeValidator validator;

    @RequestMapping(method = RequestMethod.GET)
    public String setupForm(Model model)
    {
        Employee employee = new Employee();
        model.addAttribute("employee", employee);
        return "addEmployee";
    }

    @RequestMapping(method = RequestMethod.POST)
    public String submitForm(@ModelAttribute("employee") Employee employee,
                             BindingResult result, SessionStatus status)
    {

        validator.validate(employee, result);

        if (result.hasErrors()) {
            return "addEmployee";
        }
        //Store the employee information in database
        //manager.createNewRecord(employeeVO);

        //Mark Session Complete
        status.setComplete();
        return "redirect:addNew/success";
    }

    @RequestMapping(value = "/success", method = RequestMethod.GET)
    public String success(Model model)
    {
        return "addSuccess";
    }
}






com.dao. EmployeeDAO  

package com.dao;

import java.util.List;

import com.model.Employee;

public interface EmployeeDAO
{
    public List<Employee> getAllEmployees();
}




com.dao. EmployeeDAOImpl 

package com.dao;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.model.Employee;

@Repository
public class EmployeeDAOImpl implements EmployeeDAO {

    public List<Employee> getAllEmployees()
    {
        List<Employee> employees = new ArrayList<Employee>();

        Employee vo1 = new Employee();
        vo1.setId(1);
        vo1.setFirstName("Ishu");
        vo1.setLastName("Gupta");
        employees.add(vo1);

        Employee vo2 = new Employee();
        vo2.setId(2);
        vo2.setFirstName("Ishani");
        vo2.setLastName("Choudhury");
        employees.add(vo2);

        return employees;
    }
}










com.model. Employee

package com.model;

import java.io.Serializable;

public class Employee implements Serializable
{
    private static final long serialVersionUID = 1L;

    private Integer id;
    private String firstName;
    private String lastName;
    private String email;


    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Override
    public String toString() {
        return "Employee [id=" + id + ", firstName=" + firstName
                + ", lastName=" + lastName + ", email=" + email + "]";
    }
}







com.service. EmployeeManager

package com.service;

import java.util.List;

import com.model.Employee;

public interface EmployeeManager
{
    public List<Employee> getAllEmployees();
}






com.service. EmployeeManagerImpl

package com.service;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.dao.EmployeeDAO;
import com.model.Employee;
@Service
public class EmployeeManagerImpl implements EmployeeManager {
    @Autowired
    EmployeeDAO dao;
    public List<Employee> getAllEmployees()     {
        return dao.getAllEmployees();
    }
}







com.validator. EmployeeValidator


package com.validator;
import org.springframework.stereotype.Component;
import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;
import com.model.Employee;
@Component
public class EmployeeValidator implements Validator {
    public boolean supports(Class clazz) {
        return Employee.class.isAssignableFrom(clazz);
    }
    public void validate(Object target, Errors errors)     {
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "firstName", "error.firstName", "First name is required.");
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "lastName", "error.lastName", "Last name is required.");
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "email", "error.email", "Email is required.");
    }
}







Resources -> messages.properties 

lbl.page=Add New Employee
lbl.firstName=First Name
lbl.lastName=Last Name
lbl.email=Email Id

error.firstName=First Name can not be blank
error.lastName=Last Name can not be blank
error.email=Email Id can not be blank

lbl.Id2=Employee Id
lbl.firstName2=First Name
lbl.lastName2=Last Name
lbl.page2=All Employees in System




Resources -> messages_zh_CN.properties

lbl.Id2=\u5458\u5DE5ID
lbl.firstName2=\u540D\u5B57
lbl.lastName2=\u59D3
lbl.page2=\u7CFB\u7EDF\u4E2D\u7684\u6240\u6709\u5458\u5DE5







WEB-INF -> spring-servlet.xml


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <context:component-scan base-package="com" />
    <mvc:annotation-driven />

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en" />
    </bean>

    <mvc:interceptors>
        <bean id="localeChangeInterceptor"
              class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang" />
        </bean>
    </mvc:interceptors>
</beans>










package com.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.service.EmployeeManager;
@Controller
public class EmployeeController
{
    @Autowired
    EmployeeManager manager;
    @RequestMapping(value="/getAllEmployees", method = RequestMethod.GET)
    public String welcome(Model model)
    {
        model.addAttribute("employees",manager.getAllEmployees());
        return "employeesListDisplay";
    }
}






WEB-INF ->views -> employeesListDisplay.jsp

<%@ page contentType="text/html;charset=UTF-8" %>

<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>

<html>
<head>
  <title>Spring MVC Hello World</title>
</head>

<body>
  <h2><spring:message code="lbl.page2" /></h2>

  <table border="1">
    <tr>
      <th><spring:message code="lbl.Id2" text="Employee Id" /></th>
      <th><spring:message code="lbl.firstName2" text="First Name" /></th>
      <th><spring:message code="lbl.lastName2" text="Last Name" /></th>
    </tr>
    <c:forEach items="${employees}" var="employee">
      <tr>
        <td>${employee.id}</td>
        <td>${employee.firstName}</td>
        <td>${employee.lastName}</td>
      </tr>
    </c:forEach>
  </table>

</body>
</html>







