Download Maven from:
https://maven.apache.org/download.cgi

Unzip the file:
apache-maven-3.8.7-bin.zip

Keep the extracted folder at a favorite location eg: Java home
Set the environment path to bin of maven folder
C:\Program Files\Java\apache-maven-3.8.7-bin\apache-maven-3.8.7\bin




C:\Users\monica>mvn -version
Apache Maven 3.8.7 (b89d5959fcde851dcb1c8946a785a163f14e1e29)
Maven home: C:\Program Files\Java\apache-maven-3.8.7-bin\apache-maven-3.8.7
Java version: 11.0.17, vendor: Oracle Corporation, runtime: C:\Program Files\Java\jdk-11.0.17
Default locale: en_US, platform encoding: Cp1252
OS name: "windows 10", version: "10.0", arch: "amd64", family: "windows"



Navigate inside a folder, where mvn project is to be created. 
Open cmd at this folder
Run:

mvn archetype:generate -DgroupId=com.mvnPrj1 -DartifactId=MyMvnPrj1 -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

Project structure is created.





Pom.xml : imp tags:

This is a very simple POM but still displays the key elements every POM contains, so let's walk through each of them to familiarize you with the POM essentials:

project : This is the top-level element in all Maven pom.xml files.

modelVersion : This element indicates what version of the object model this POM is using. The version of the model itself changes very infrequently but it is mandatory in order to ensure stability of use if and when the Maven developers deem it necessary to change the model.

groupId : This element indicates the unique identifier of the organization or group that created the project. The groupId is one of the key identifiers of a project and is typically based on the fully qualified domain name of your organization. For example org.apache.maven.plugins is the designated groupId for all Maven plugins.

artifactId : This element indicates the unique base name of the primary artifact being generated by this project. The primary artifact for a project is typically a JAR file. Secondary artifacts like source bundles also use the artifactId as part of their final name. A typical artifact produced by Maven would have the form <artifactId>-<version>.<extension> (for example, myapp-1.0.jar).

version : This element indicates the version of the artifact generated by the project. Maven goes a long way to help you with version management and you will often see the SNAPSHOT designator in a version, which indicates that a project is in a state of development. We will discuss the use of snapshots and how they work further on in this guide.

name : This element indicates the display name used for the project. This is often used in Maven's generated documentation.

url : This element indicates where the project's site can be found. This is often used in Maven's generated documentation.

properties : This element contains value placeholders accessible anywhere within a POM.

dependencies : This element's children list dependencies. The cornerstone of the POM.

build : This element handles things like declaring your project's directory structure and managing plugins.





pom.xml:

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mvnPrj1</groupId>
  <artifactId>MyMvnPrj1</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>MyMvnPrj1</name>
  <url>http://maven.apache.org</url>
  <dependencies>
        <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
<build>
    <plugins>
        <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <version>2.4</version>
    <configuration>
        <archive>
            <index>true</index>
            <manifest>
                <addClasspath>true</addClasspath>
                <mainClass>com.mvnPrj1.App</mainClass>
            </manifest>
        </archive>
    </configuration>
</plugin>
    </plugins>
</build>
</project>




Summary of commands:

Create Project of Maven:
C:\Users\monica\ProjectsJava\MvnByCmd>mvn archetype:generate -DgroupId=com.mvnPrj1 -DartifactId=MyMvnPrj1 -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
See the tree structure:
C:\Users\monica\ProjectsJava\MvnByCmd>tree
Navigate inside project folder:
C:\Users\monica\ProjectsJava\MvnByCmd>cd MyMvnPrj1
Package the project:
C:\Users\monica\ProjectsJava\MvnByCmd\MyMvnPrj1>mvn package
Check the content of the Jar file thus created:
C:\Users\monica\ProjectsJava\MvnByCmd\MyMvnPrj1>jar tf target/MyMvnPrj1-1.0-SNAPSHOT.jar
Run the App.java file:
C:\Users\monica\ProjectsJava\MvnByCmd\MyMvnPrj1>java -jar target/MyMvnPrj1-1.0-SNAPSHOT.jar
Hello World!








